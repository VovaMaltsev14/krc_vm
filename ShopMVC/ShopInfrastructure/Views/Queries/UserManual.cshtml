@{
    ViewData["Title"] = "Керівництво користувача";
}

<div class="container">
    <h1 class="mb-4">Керівництво користувача системи ShopMVC</h1>

    <div class="mb-5">
        <h2 class="text-primary">1. Ідентифікаційний розділ</h2>
        <div class="card">
            <div class="card-body">
                <h5>Призначення системи</h5>
                <p>ShopMVC - це система управління інтернет-магазином, яка дозволяє аналізувати взаємозв'язки між
                    товарами, категоріями, виробниками та замовленнями користувачів.</p>

                <h5>Коротка назва</h5>
                <p>ShopMVC</p>

                <h5>Автор</h5>
                <p>[Ваше ім'я]</p>

                <h5>Специфікація комп'ютера</h5>
                <ul>
                    <li>Процесор: Intel Core i5 або вище</li>
                    <li>Оперативна пам'ять: 8 ГБ або більше</li>
                    <li>Вільне місце на диску: 1 ГБ</li>
                </ul>

                <h5>Операційна система</h5>
                <p>Windows 10/11, macOS, Linux</p>

                <h5>Базова СУБД</h5>
                <p>Microsoft SQL Server 2019 або новіше</p>
            </div>
        </div>
    </div>

    <div class="mb-5">
        <h2 class="text-primary">2. Опис інтерфейсу</h2>
        <div class="card">
            <div class="card-body">
                <h5>Головне меню запитів</h5>
                <p>Головна сторінка запитів містить два розділи:</p>
                <ul>
                    <li>Прості параметризовані запити (використовують більше однієї таблиці)</li>
                    <li>Запити з множинними порівняннями</li>
                </ul>

                <h5>Форми запитів</h5>
                <p>Кожна форма запиту містить:</p>
                <ul>
                    <li>Поле введення параметру (якщо потрібно)</li>
                    <li>Таблицю результатів</li>
                    <li>Кнопку "Назад до меню"</li>
                </ul>

                <h5>Елементи керування</h5>
                <ul>
                    <li><strong>Текстові поля:</strong> для введення числових значень (ID, кількість)</li>
                    <li><strong>Випадаючі списки:</strong> для вибору країн, категорій, користувачів</li>
                    <li><strong>Кнопки:</strong> для відправки запиту та навігації</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="mb-5">
        <h2 class="text-primary">3. Таблиці та зв'язки</h2>
        <div class="card">
            <div class="card-body">
                <h5>Основні таблиці</h5>
                <ul>
                    <li><strong>products</strong> - товари (pd_id, pd_name, pd_price, pd_quantity)</li>
                    <li><strong>categories</strong> - категорії (cg_id, cg_name)</li>
                    <li><strong>manufacturers</strong> - виробники (mn_id, mn_name, country_id)</li>
                    <li><strong>orders</strong> - замовлення (od_id, od_user, od_total)</li>
                    <li><strong>users</strong> - користувачі (Id, UserName)</li>
                    <li><strong>countries</strong> - країни (co_id, co_name)</li>
                </ul>

                <h5>Зв'язуючі таблиці</h5>
                <ul>
                    <li><strong>product_categories</strong> - зв'язок товарів з категоріями</li>
                    <li><strong>product_orders</strong> - зв'язок товарів з замовленнями</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="mb-5">
        <h2 class="text-primary">4. Запити</h2>
        <div class="card">
            <div class="card-body">
                <h5>Прості параметризовані запити (використовують більше однієї таблиці)</h5>
                <ol>
                    <li>
                        <strong>Товари, які не були замовлені та мають кількість менше вказаної</strong><br>
                        <em>Параметр: MaxQuantity - Показує товари, які не були замовлені та мають кількість менше
                            вказаної</em><br>
                        <code>SELECT p.pd_name, p.pd_quantity, p.pd_price, m.mn_name<br>
                        FROM products p<br>
                        JOIN manufacturers m ON p.manufacturer_id = m.mn_id<br>
                        WHERE p.pd_id NOT IN (SELECT product_id FROM product_orders)<br>
                        AND p.pd_quantity &lt; @@maxQuantity;</code>
                    </li>
                    <li>
                        <strong>Виробники товарів, замовлених конкретним користувачем</strong><br>
                        <em>Параметр: UserId - Показує виробників, які постачають товари, замовлені конкретним
                            користувачем</em><br>
                        <code>SELECT DISTINCT m.mn_name, STRING_AGG(p.pd_name, ', ')<br>
                        FROM manufacturers m<br>
                        JOIN products p ON m.mn_id = p.manufacturer_id<br>
                        JOIN product_orders po ON p.pd_id = po.product_id<br>
                        JOIN orders o ON po.order_id = o.od_id<br>
                        WHERE o.od_user = @@userId<br>
                        GROUP BY m.mn_id, m.mn_name;</code>
                    </li>
                    <li>
                        <strong>Товари в тих самих категоріях, що й вказаний товар</strong><br>
                        <em>Параметр: ProductId - Показує товари, які належать до тих самих категорій, що й вказаний
                            товар</em><br>
                        <code>SELECT p.pd_name, STRING_AGG(c.cg_name, ', ')<br>
                        FROM products p<br>
                        JOIN product_categories pc ON p.pd_id = pc.product_id<br>
                        JOIN categories c ON pc.category_id = c.cg_id<br>
                        WHERE c.cg_id IN (<br>
                            SELECT category_id<br>
                            FROM product_categories<br>
                            WHERE product_id = @@productId<br>
                        )<br>
                        AND p.pd_id != @@productId<br>
                        GROUP BY p.pd_id, p.pd_name;</code>
                    </li>
                    <li>
                        <strong>Користувачі, які не замовляли жодного товару, який замовляв вказаний
                            користувач</strong><br>
                        <em>Параметр: UserId - Показує користувачів, які не замовляли жодного товару, який замовляв
                            вказаний користувач</em><br>
                        <code>SELECT u.UserName as UsName, COUNT(DISTINCT o.od_id) as OrderCount<br>
                        FROM users u<br>
                        JOIN orders o ON u.Id = o.od_user<br>
                        WHERE NOT EXISTS (<br>
                            SELECT 1<br>
                            FROM product_orders po1<br>
                            JOIN orders o1 ON po1.order_id = o1.od_id<br>
                            WHERE o1.od_user = @@userId<br>
                            AND po1.product_id IN (<br>
                                SELECT po2.product_id<br>
                                FROM product_orders po2<br>
                                JOIN orders o2 ON po2.order_id = o2.od_id<br>
                                WHERE o2.od_user = u.Id<br>
                            )<br>
                        )<br>
                        GROUP BY u.Id, u.UserName;</code>
                    </li>
                    <li>
                        <strong>Виробники, що постачають всі товари вказаної категорії</strong><br>
                        <em>Параметр: CategoryId - Показує виробників, які постачають всі товари вказаної
                            категорії</em><br>
                        <code>WITH CategoryProducts AS (<br>
                        SELECT p.pd_id<br>
                        FROM products p<br>
                        JOIN product_categories pc ON p.pd_id = pc.product_id<br>
                        WHERE pc.category_id = @@categoryId<br>
                        )<br>
                        SELECT m.mn_name, m.country_id as MnCountry, COUNT(DISTINCT p.pd_id) as ProductCount<br>
                        FROM manufacturers m<br>
                        JOIN products p ON m.mn_id = p.manufacturer_id<br>
                        WHERE p.pd_id IN (SELECT pd_id FROM CategoryProducts)<br>
                        GROUP BY m.mn_id, m.mn_name, m.country_id<br>
                        HAVING COUNT(DISTINCT p.pd_id) = (SELECT COUNT(*) FROM CategoryProducts);</code>
                    </li>
                    <li>
                        <strong>Товари, які мають всі ті самі категорії, що й вказаний товар</strong><br>
                        <em>Параметр: ProductId - Показує товари, які мають всі ті самі категорії, що й вказаний
                            товар</em><br>
                        <code>WITH ProductCategories AS (<br>
                        SELECT category_id<br>
                        FROM product_categories<br>
                        WHERE product_id = @@productId<br>
                        )<br>
                        SELECT p.pd_name, STRING_AGG(c.cg_name, ', ')<br>
                        FROM products p<br>
                        JOIN product_categories pc ON p.pd_id = pc.product_id<br>
                        JOIN categories c ON pc.category_id = c.cg_id<br>
                        WHERE p.pd_id != @@productId<br>
                        GROUP BY p.pd_id, p.pd_name<br>
                        HAVING COUNT(DISTINCT pc.category_id) = (SELECT COUNT(*) FROM ProductCategories)<br>
                        AND NOT EXISTS (<br>
                            SELECT 1 FROM ProductCategories pc1<br>
                            WHERE NOT EXISTS (<br>
                                SELECT 1 FROM product_categories pc2<br>
                                WHERE pc2.product_id = p.pd_id<br>
                                AND pc2.category_id = pc1.category_id<br>
                            )<br>
                        );</code>
                    </li>
                    <li>
                        <strong>Товари, замовлені всіма користувачами з вказаної країни</strong><br>
                        <em>Параметр: CountryId - Показує товари, замовлені всіма користувачами з вказаної
                            країни</em><br>
                        <code>WITH CountryUsers AS (<br>
                        SELECT DISTINCT o.od_user<br>
                        FROM orders o<br>
                        JOIN shipings s ON o.shipping_id = s.sh_id<br>
                        WHERE s.country_id = @@countryId<br>
                        )<br>
                        SELECT p.pd_name as ProductName, m.mn_name as ManufacturerName,<br>
                        COUNT(DISTINCT o.od_user) as UserCount,<br>
                        (SELECT COUNT(*) FROM CountryUsers) as TotalUsersInCountry<br>
                        FROM products p<br>
                        JOIN manufacturers m ON p.manufacturer_id = m.mn_id<br>
                        JOIN product_orders po ON p.pd_id = po.product_id<br>
                        JOIN orders o ON po.order_id = o.od_id<br>
                        WHERE o.od_user IN (SELECT od_user FROM CountryUsers)<br>
                        GROUP BY p.pd_id, p.pd_name, m.mn_name<br>
                        HAVING COUNT(DISTINCT o.od_user) = (SELECT COUNT(*) FROM CountryUsers);</code>
                    </li>
                </ol>

                <h5>Запити з множинними порівняннями</h5>
                <ol>
                    <li>
                        <strong>Товари з ціною вище середньої в категорії</strong><br>
                        <em>Використовує порівняння з середніми значеннями категорій (всі товари вище
                            середнього)</em><br>
                        <code>WITH CategoryAverages AS (<br>
                        SELECT c.cg_id, AVG(CAST(p.pd_price AS DECIMAL(18,2))) as AvgPrice<br>
                        FROM categories c<br>
                        JOIN product_categories pc ON c.cg_id = pc.category_id<br>
                        JOIN products p ON pc.product_id = p.pd_id<br>
                        GROUP BY c.cg_id<br>
                        )<br>
                        SELECT p.pd_name, p.pd_price, c.cg_name, ca.AvgPrice<br>
                        FROM products p<br>
                        JOIN product_categories pc ON p.pd_id = pc.product_id<br>
                        JOIN categories c ON pc.category_id = c.cg_id<br>
                        JOIN CategoryAverages ca ON pc.category_id = ca.cg_id<br>
                        WHERE CAST(p.pd_price AS DECIMAL(18,2)) > ca.AvgPrice;</code>
                    </li>
                    <li>
                        <strong>Виробники, що постачають товари у всіх категоріях</strong><br>
                        <em>Використовує порівняння ALL для пошуку виробників, які постачають товари у всіх
                            категоріях</em><br>
                        <code>WITH CategoryCount AS (<br>
                        SELECT COUNT(DISTINCT cg_id) as TotalCategories<br>
                        FROM categories<br>
                        )<br>
                        SELECT m.mn_name as ManufacturerName, c.co_name as Country,<br>
                        STRING_AGG(DISTINCT cat.cg_name, ', ') as CategoriesSupplied,<br>
                        (SELECT TotalCategories FROM CategoryCount) as TotalCategories<br>
                        FROM manufacturers m<br>
                        JOIN countries c ON m.country_id = c.co_id<br>
                        JOIN products p ON m.mn_id = p.manufacturer_id<br>
                        JOIN product_categories pc ON p.pd_id = pc.product_id<br>
                        JOIN categories cat ON pc.category_id = cat.cg_id<br>
                        GROUP BY m.mn_id, m.mn_name, c.co_name<br>
                        HAVING COUNT(DISTINCT pc.category_id) = (SELECT TotalCategories FROM CategoryCount);</code>
                    </li>
                    <li>
                        <strong>Користувачі, які замовляли товари від усіх виробників</strong><br>
                        <em>Використовує порівняння ALL для пошуку користувачів, які замовляли товари від усіх
                            виробників</em><br>
                        <code>WITH ManufacturerCount AS (<br>
                        SELECT COUNT(DISTINCT mn_id) as TotalManufacturers<br>
                        FROM manufacturers<br>
                        )<br>
                        SELECT u.UserName,<br>
                        STRING_AGG(DISTINCT m.mn_name, ', ') as ManufacturersOrderedFrom,<br>
                        (SELECT TotalManufacturers FROM ManufacturerCount) as TotalManufacturers<br>
                        FROM users u<br>
                        JOIN orders o ON u.Id = o.od_user<br>
                        JOIN product_orders po ON o.od_id = po.order_id<br>
                        JOIN products p ON po.product_id = p.pd_id<br>
                        JOIN manufacturers m ON p.manufacturer_id = m.mn_id<br>
                        GROUP BY u.Id, u.UserName<br>
                        HAVING COUNT(DISTINCT m.mn_id) = (SELECT TotalManufacturers FROM ManufacturerCount);</code>
                    </li>
                    <li>
                        <strong>Користувачі з однаковими замовленнями</strong><br>
                        <em>Використовує множинні порівняння для пошуку користувачів, які замовляли однакові
                            товари</em><br>
                        <code>WITH UserProducts AS (<br>
                        SELECT o.od_user, STRING_AGG(CAST(po.product_id AS VARCHAR), ',') WITHIN GROUP (ORDER BY po.product_id) as ProductList<br>
                        FROM orders o<br>
                        JOIN product_orders po ON o.od_id = po.order_id<br>
                        GROUP BY o.od_user<br>
                        )<br>
                        SELECT up1.od_user as User1, up2.od_user as User2,<br>
                        STRING_AGG(p.pd_name, ', ') as CommonProducts,<br>
                        COUNT(DISTINCT po.product_id) as CommonProductCount<br>
                        FROM UserProducts up1<br>
                        JOIN UserProducts up2 ON up1.ProductList = up2.ProductList AND up1.od_user < up2.od_user<br>
                        JOIN product_orders po ON po.product_id IN (<br>
                            SELECT value FROM STRING_SPLIT(up1.ProductList, ',')<br>
                        )<br>
                        JOIN products p ON po.product_id = p.pd_id<br>
                        GROUP BY up1.od_user, up2.od_user<br>
                        HAVING COUNT(DISTINCT po.product_id) > 1;</code>
                    </li>
                    <li>
                        <strong>Виробники з користувачами, які мають однаковий місяць народження</strong><br>
                        <em>Знаходить виробників, у яких співпадають множини місяців народження замовників</em><br>
                        <code>WITH ManufacturerCustomerMonths AS (<br>
                        SELECT m.mn_id, m.mn_name,<br>
                        STRING_AGG(DISTINCT CAST(MONTH(u.UrBirthdate) AS VARCHAR), ',') WITHIN GROUP (ORDER BY MONTH(u.UrBirthdate)) as BirthMonths<br>
                        FROM manufacturers m<br>
                        JOIN products p ON m.mn_id = p.manufacturer_id<br>
                        JOIN product_orders po ON p.pd_id = po.product_id<br>
                        JOIN orders o ON po.order_id = o.od_id<br>
                        JOIN users u ON o.od_user = u.Id<br>
                        GROUP BY m.mn_id, m.mn_name<br>
                        )<br>
                        SELECT mcm1.mn_name as Manufacturer1, mcm2.mn_name as Manufacturer2,<br>
                        STRING_AGG(DISTINCT CAST(value AS VARCHAR), ', ') as CommonBirthMonths,<br>
                        COUNT(DISTINCT value) as MonthCount<br>
                        FROM ManufacturerCustomerMonths mcm1<br>
                        JOIN ManufacturerCustomerMonths mcm2 ON mcm1.BirthMonths = mcm2.BirthMonths AND mcm1.mn_id < mcm2.mn_id<br>
                        CROSS APPLY STRING_SPLIT(mcm1.BirthMonths, ',')<br>
                        GROUP BY mcm1.mn_name, mcm2.mn_name<br>
                        HAVING COUNT(DISTINCT value) > 1;</code>
                    </li>
                </ol>
            </div>
        </div>
    </div>
    <div class="list-group-item list-group-item-action">
        <a asp-action="ManufacturersWithSameCustomerBirthMonths" class="text-decoration-none">
            <div class="d-flex w-100 justify-content-between">
                <h5 class="mb-1">Виробники з однаковими місяцями народження замовників</h5>
            </div>
            <p class="mb-1">Знаходить виробників, у яких співпадають множини місяців народження замовників</p>
        </a>
        <pre class="bg-light p-3 mt-2"><code>CREATE OR ALTER PROCEDURE GetManufacturersWithSameCustomerBirthMonths
AS
BEGIN
    WITH ManufacturerCustomerMonths AS (
        SELECT m.mn_id, m.mn_name,
        STRING_AGG(CAST(MONTH(u.UrBirthdate) AS VARCHAR), ',') WITHIN GROUP (ORDER BY MONTH(u.UrBirthdate)) as BirthMonths
        FROM manufacturers m
        JOIN products p ON m.mn_id = p.manufacturer_id
        JOIN product_orders po ON p.pd_id = po.product_id
        JOIN orders o ON po.order_id = o.od_id
        JOIN AspNetUsers u ON o.od_user = u.Id
        GROUP BY m.mn_id, m.mn_name
    )
    SELECT 
        mcm1.mn_name as Manufacturer1, 
        mcm2.mn_name as Manufacturer2,
        mcm1.BirthMonths as CommonBirthMonths,
        LEN(mcm1.BirthMonths) - LEN(REPLACE(mcm1.BirthMonths, ',', '')) + 1 as MonthCount
    FROM ManufacturerCustomerMonths mcm1
    JOIN ManufacturerCustomerMonths mcm2 ON mcm1.BirthMonths = mcm2.BirthMonths AND mcm1.mn_id < mcm2.mn_id
    WHERE mcm1.BirthMonths IS NOT NULL AND mcm1.BirthMonths != '';
END</code></pre>

        <div class="mb-5">
            <h2 class="text-primary">5. Вимоги до користувача</h2>
            <div class="card">
                <div class="card-body">
                    <h5>Кваліфікація</h5>
                    <ul>
                        <li>Базові навички роботи з операційною системою Windows</li>
                        <li>Знання української мови для роботи з інтерфейсом</li>
                        <li>Базове розуміння структури даних та взаємозв'язків між ними</li>
                    </ul>

                    <h5>Додаткові вимоги</h5>
                    <ul>
                        <li>Доступ до веб-браузера (Chrome, Firefox, Edge)</li>
                        <li>Підключення до інтернету</li>
                        <li>Розуміння базових концепцій SQL-запитів</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>